# Задача №112515. Построчный редактор
# Напишите программу, которая управляет текстовым редактором по командам, 
# записанным в файл output.txt . Строки текста нумеруются с единицы. 
# Сначала список строк пустой. 
# Существует три команды: '+' – добавление строки, '-' – удаление строки и '*' – замена строки. 
# Попытка удалить или заменить строку, которой нет в списке, считается ошибкой. 
# Ошибочна также и вставка строки с номером, который более чем на единицу 
# превышает количество строк в тексте.

# Входные данные
# В файле input.txt записаны строки с командами, последняя строка файла – пустая. 
# Первый символ любой рабочей строки – это команда ('+', '-' или '*'), далее без 
# пробела записывается номер строки, а затем (для команд '+' и '*') – текст новой строки, 
# который нужно добавить или заменить.

# Выходные данные
# Программа должна вывести в файл output.txt все строки, 
# которые остались в списке после обработки всех команд. 
# Если в списке не осталось ни одной строки, нужно вывести слово 'EMPTY'. 
# Если произошла ошибка, нужно вывести слово 'ERROR'.

# Примеры
# входные данные
# +1 I am a pupil.
# +2 He is a pupil.
# +2 She is a pupil.
# +3 This is a pupil.
# *2 Bob went home.
# -3
# выходные данные
# I am a pupil.
# Bob went home.
# He is a pupil..



import sys, os
 
date_in_file = os.path.join(sys.path[0], 'output.txt')
 
new_content = []
try:
    with open(date_in_file, 'r') as f: # Читаем строки команд пока не встретим пусиую строку
        for command in f:
            command = command.rstrip()
            if not command:
                break # Прекращаем выполнение команд если встретили пустую строку
            # Разделяем строки на команду и строку
            if command[0] != '-':
                string = command[command.find(' ')+1:]
                command = command[:command.find(' ')]
            number = int(command[1:]) - 1 # Определяем индекс строки в списке
            if command[0] == '+':
                if number - len(new_content) > 0:
                    raise()
                new_content.insert(number, string)
            if command[0] == '*':
                if len(new_content)-1 < number:
                    raise()
                new_content[number] = string
            if command[0] == '-':
                if len(new_content)-1 < number:
                    raise()
                del(new_content[number])
 
    if len(new_content) == 0:
        new_content = ['EMPTY']  # Пусто
except:
    new_content = ['ERROR']  # Любая ошибка
 
# Добавление в конец файла
with open(date_in_file, 'a') as f:
    for i in new_content:
        f.write(i + '\n')
0



# Задача №112288. Симметричные пары
# Пара элементов в массиве называется симметричной , 
# если эти элементы находятся на одинаковом расстоянии от 
# концов массива. Так в массиве размером N симметричными будут 
# пары элементов с порядковыми номерами 1 и N , 2 и N - 1 и т.д. 
# (при нумерации с единицы). Напишите программу, 
# которая заполняет массив из N элементов случайными целыми числами в 
# диапазоне [ A , B ] и определяет номера двух симметричных элементов 
# этого массива, сумма которых чётная и максимальная среди всех пар 
# симметричных элементов. Если ни одной такой пары нет, 
# нужно вывести два нуля. Если есть несколько таких пар, 
# нужно вывести номера элементов, составляющих пару, 
# ближайшую к центру массива.

# Входные данные
# Входная строка содержит три числа:
# границы диапазона случайных чисел A и B , а также 
# размер массива N . Все числа разделены пробелами. 
# Гарантируется, что 0 < N ≤ 10000 .

# Выходные данные
# В первой строке программа должна 
# вывести N элементов построенного 
# массива, разделив их пробелами, а во
# второй строке – номера двух симметричных 
# элементов массива, имеющих максимальную 
# чётную сумму. Если ни одной такой пары нет, нужно вывести два нуля.

# Примеры
# входные данные
# 10 20 10
# выходные данные
# 10 10 19 12 13 17 13 11 14 14
# 5 6